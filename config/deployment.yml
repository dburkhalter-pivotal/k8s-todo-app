#! 19.aout - dib
#@ load("@ytt:data", "data")
#@ load("helpers.star", "labels_for_component", "annotations_for_component", "image_for_component")
---
apiVersion: apps/v1
kind: Deployment
#! https://github.com/paketo-buildpacks/nginx
metadata:
  name: frontend
  namespace: #@ data.values.NAMESPACE
  labels: #@ labels_for_component("frontend")
  #! didier
  annotations: #@ annotations_for_component("frontend")
spec:
  replicas: 1
  selector:
    matchLabels: #@ labels_for_component("frontend")
  template:
    metadata:
      labels: #@ labels_for_component("frontend")
    spec:
      containers:
      - name: frontend
        image: #@ image_for_component("frontend")
        resources:
          requests:
            memory: 256M
          limits:
            memory: 256M
        env:
        - name: PORT
          value: "8080"
        ports:
        - name: http
          containerPort: 8080
        livenessProbe:
          httpGet:
            port: http
            path: /
        readinessProbe:
          httpGet:
            port: http
            path: /
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: #@ data.values.NAMESPACE
  labels: #@ labels_for_component("backend")
  #! didier
  annotations: #@ annotations_for_component("backend")
spec:
  replicas: 1
  selector:
    matchLabels: #@ labels_for_component("backend")
  template:
    metadata:
      labels: #@ labels_for_component("backend")
    spec:
      containers:
      - name: backend
        image: #@ image_for_component("backend-native" if data.values.USE_NATIVE_BACKEND else "backend")
        resources:
          requests:
            memory: #@ "256M" if data.values.USE_NATIVE_BACKEND else "1G"
          limits:
            memory: #@ "256M" if data.values.USE_NATIVE_BACKEND else "1G"
        ports:
        - name: http
          containerPort: 8080
        livenessProbe:
          httpGet:
            port: http
            path: /actuator/health/liveness
        readinessProbe:
          httpGet:
            port: http
            path: /actuator/health/readiness
        env:
        - name: SPRING_CONFIG_IMPORT
          value: configtree:/etc/config/*/
        volumeMounts:
        - mountPath: /etc/config/db
          name: db
        #! Load secrets generated by the Tanzu SQL operator.
        - mountPath: /etc/config/db-secret/spring.datasource.password
          name: db-secret
          subPath: password
      volumes:
      - name: db
        secret:
          secretName: db
      - name: db-secret
        secret:
          secretName: pgdb-db-secret
